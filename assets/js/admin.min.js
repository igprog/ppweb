/*!
admin.js
(c) 2017 IG PROG, www.igprog.hr
*/
angular.module("app", []).controller("adminCtrl", ["$scope", "$http", "$rootScope", function (a, t, n) { t.get("./config/config.json").then(function (a) { n.config = a.data }), a.islogin = !1; var e = new Date; a.year = e.getFullYear(), a.toggleTpl = function (t) { a.tpl = t }, a.toggleTpl("login"), init = function () { a.user = { username: "", password: "" } }, init(), a.login = function (e) { t({ url: n.config.backend + "Admin.asmx/Login", method: "POST", data: { username: e.username, password: e.password } }).then(function (t) { a.islogin = JSON.parse(t.data.d), 1 == a.islogin ? a.toggleTpl("programPrehraneWeb") : alert("error login") }, function (t) { a.islogin = !1, alert(t.data.d) }) }, a.logout = function () { a.islogin = !1, a.toggleTpl("login"), init() } }]).controller("applicationCtrl", ["$scope", "$http", "$rootScope", function (a, t, n) { t({ url: n.config.backend + "Instal.asmx/Load", method: "POST", data: "" }).then(function (t) { a.d = JSON.parse(t.data.d) }, function (a) { alert(a.data.d) }) }]).controller("webAppCtrl", ["$scope", "$http", "$rootScope", function (a, t, n) { a.showDetails = !1, a.loading = !1, a.limit = 10, a.page = 1, a.searchQuery = ""; var e = function () { a.loading = !0, t({ url: n.config.backend + "Users.asmx/Total", method: "POST", data: "" }).then(function (t) { a.t = JSON.parse(t.data.d), a.loading = !1 }, function (t) { a.loading = !1, alert(t.data.d) }) }; e(); var o = function () { a.loading = !0, t({ url: n.config.backend + "Users.asmx/Load", method: "POST", data: { limit: a.limit, page: a.page } }).then(function (t) { a.loading = !1, a.d = JSON.parse(t.data.d) }, function (t) { a.loading = !1, alert(t.data.d) }) }; a.search = function () { a.loading = !0, a.page = 1, t({ url: n.config.backend + "Users.asmx/Search", method: "POST", data: { query: a.searchQuery, limit: a.limit, page: a.page } }).then(function (t) { a.d = JSON.parse(t.data.d), a.loading = !1 }, function (t) { a.loading = !1, alert(t.data.d) }) }, a.search(), a.update = function (a) { t({ url: n.config.backend + "Users.asmx/Update", method: "POST", data: { x: a } }).then(function (a) { o(), e(), alert(a.data.d) }, function (a) { alert(a.data.d) }) }, a.remove = function (a) { 1 == confirm("BriÅ¡i " + a.firstName + " " + a.lastName + "?") && i(a) }; var i = function (a) { t({ url: n.config.backend + "Users.asmx/Delete", method: "POST", data: { x: a } }).then(function (a) { o(), e(), alert(a.data.d) }, function (a) { alert(a.data.d) }) }; a.idxStart = 0, a.idxEnd = 10, a.setPage = function (t) { a.idxStart = 0 + t, a.idxEnd = 10 + t }, a.showAllPages = function () { a.idxStart = 0, a.idxEnd = a.d.length }, google.charts.load("current", { packages: ["line"] }), google.charts.setOnLoadCallback(function () { var a = new google.visualization.DataTable; a.addColumn("number", "Aktivacije"), a.addColumn("number", "Postotak licenci"), a.addColumn("number", "Licence"), t({ url: n.config.backend + "Users.asmx/TotalList", method: "POST", data: "" }).then(function (t) { var n = JSON.parse(t.data.d); angular.forEach(n, function (t, n) { a.addRows([[n, t.licencepercentage, t.licence]]) }); var e = new google.charts.Line(document.getElementById("chart_ppweb")); e.draw(a, google.charts.Line.convertOptions({ chart: { title: "Pregled registracija i aktivacija" }, height: 250 })) }, function (a) { alert(a.data.d) }) }), a.nextPage = function () { a.page = a.page + 1, o() }, a.prevPage = function () { a.page > 1 && (a.page = a.page - 1, o()) } }]).controller("ordersCtrl", ["$scope", "$http", "$rootScope", function (a, t, n) { t({ url: n.config.backend + "Orders.asmx/Load", method: "POST", data: "" }).then(function (t) { a.orders = JSON.parse(t.data.d) }, function (a) { alert(a.data.d) }) }]);